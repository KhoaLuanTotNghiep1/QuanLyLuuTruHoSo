@using S3Train.WebHeThong.Models
@model HopViewModel

@{
    ViewBag.Title = "CreateOrUpdate";
    Layout = "~/Views/Shared/_LayoutAdminPage.cshtml";

    string title = string.IsNullOrEmpty(Model.Id) ? "Tạo Mới" : "Cập Nhật";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">@title Hộp</h1>
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index","Hop")">Hop</a></li>
        <li class="breadcrumb-item active" aria-current="page">Tao-Moi-Hoac-Cap-Nhat</li>
    </ol>
</div>
<div class="card">
    <div class="card-body" id="myForm">
        @using (Html.BeginForm("CreateOrUpdate", "Hop", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-group row">
                <div class="col-md-6">
                    <label>@Html.DisplayNameFor(item => Model.PhongBanId)</label>
                    @Html.DropDownListFor(m => m.PhongBanId, new SelectList(ViewBag.PhongBans, "Value", "Text"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PhongBanId, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    <label>@Html.DisplayNameFor(item => Model.KeId)</label>
                    @Html.EditorFor(model => model.KeId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Vị trí lưu trữ hộp" } })
                    <i><span>Lưu ý: phải nhập đúng với kết quả được gợi ý</span></i>
                    @Html.ValidationMessageFor(model => model.KeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-6">
                    <label>@Html.DisplayNameFor(item => Model.ChuyenDe)</label>
                    @Html.EditorFor(model => model.ChuyenDe, new { htmlAttributes = new { @class = "form-control", @placeholder = "Tên chuyên đề của hộp" } })
                    @Html.ValidationMessageFor(model => model.ChuyenDe, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    <label>@Html.DisplayNameFor(item => Model.SoHop)</label>
                    @Html.EditorFor(model => model.SoHop, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SoHop, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-6">
                    <label>@Html.DisplayNameFor(item => Model.NgayBatDau)</label>
                    @Html.EditorFor(model => model.NgayBatDau, new { htmlAttributes = new { @class = "form-control Start-Date" } })
                    @Html.ValidationMessageFor(model => model.NgayBatDau, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    <label>@Html.DisplayNameFor(item => Model.NgayKetThuc)</label>
                    @Html.EditorFor(model => model.NgayKetThuc, new { htmlAttributes = new { @class = "form-control End-Date" } })
                    @Html.ValidationMessageFor(model => model.NgayKetThuc, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Lưu" class="btn btn-success" />
            </div>
        }
    </div>
</div>

@section scripts{
    <script>
        $(function () {
            var successMessage = '@TempData["AlertMessage"]'
            if (successMessage != '')
                alertify.success(successMessage);
        });
        $(document).ready(function () {
            $("#KeId").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Hop/AutoCompleteText",
                        type: "POST",
                        dataType: "json",
                        data: { text: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return { label: item.Text, value: item.Text };
                            }))

                        }
                    })
                }
            });
        });
    </script>
}
